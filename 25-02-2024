class Solution {
public:
    long long int count(long long int n) {
        // Initializing an array to store the number of combinations for each score
        std::vector<long long int> dp(n + 1, 0);
        // Base case: there is 1 way to reach score 0 (by not making any move)
        dp[0] = 1;

        // Iterating through all possible moves (3, 5, 10)
        for (int i = 3; i <= n; ++i) {
            dp[i] += dp[i - 3];
        }

        for (int i = 5; i <= n; ++i) {
            dp[i] += dp[i - 5];
        }

        for (int i = 10; i <= n; ++i) {
            dp[i] += dp[i - 10];
        }

        // Returning the number of distinct combinations to reach the given score n
        return dp[n];
    }
};